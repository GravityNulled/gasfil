// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String
  phone         String
  address      String


  accounts      Account[]
  sessions      Session[]
  orders        Order[]
  payments      PaymentTransaction[]
  refilRequest  RefillRequest[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model GasProduct {
  id                 String   @id @default(cuid())
  name               String
  description        String
  price              Float
  quantity_available Int
}

model Order {
  id           String   @id @default(cuid())
  order_date  DateTime @updatedAt
  status      String   @default("pending")
  total_amount Float
  userId     String
  
  user        User    @relation(fields: [userId], references: [id])
  payment     PaymentTransaction? 
}

model PaymentTransaction {
  id              String   @id @default(cuid())
  orderId         String @unique
  payment_date    DateTime
  payment_method  String
  amount          Float
  status          String
  userId          String


  user            User    @relation(fields: [userId], references: [id])
  order           Order   @relation(fields: [orderId], references: [id])
}

model RefillRequest {
  id              String   @id @default(cuid())
  request_date DateTime
  status       String @default("pending")

  userId      String
  user         User   @relation(fields: [userId], references: [id])
}